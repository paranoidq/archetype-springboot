spring.profiles.active=dev

# ------------ 容器配置 start ------------ #
## 上下文路径和端口
server.servlet.context-path=/boot
server.port=8092
## http编码配置
spring.http.encoding.enabled=true
spring.http.encoding.charset=UTF-8
# ------------ 容器配置 end ------------ #


# ------------ spring mvc 配置 start ------------ #
spring.mvc.favicon.enabled=true
## 配置静态资源location和URL映射
spring.mvc.static-path-pattern=/resources/**
spring.resources.static-locations=classpath:/META-INF/resources/, classpath:/resources/, classpath:/static/, classpath:/public/
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
# ------------ spring mvc 配置 end ------------ #


# ------------ spring cache 配置 start ------------ #
spring.cache.type=simple

# ------------ spring cache 配置 end ------------ #


# ------------ 数据源配置 start ------------ #
## 无需配置driver-class，springboot会根据url推断数据库驱动
spring.datasource.url=jdbc:mysql://localhost:3306/nhea
spring.datasource.username=root
spring.datasource.password=88863650qw
## 配置特定连接池实现（此处配置HikariCP连接池相关参数）
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=1
# ------------ 数据源配置 end ------------ #


# ------------ actuator配置 start ------------ #
## web端默认只暴露info和health，需要自行添加暴露
management.endpoints.web.exposure.include=health,info,loggers,env
## 自定义监控访问地址和路径（为了安全考虑，区分前端访问接口的信道和后端管理接口的信道）
management.server.address=127.0.0.1
management.server.port=8093
management.server.servlet.context-path=/management
# ------------ actuator配置 end ------------ #


# ------------ jmx配置 start ------------ #
management.endpoints.jmx.domain=me.webapp
management.endpoints.jmx.unique-names=true
management.endpoints.jmx.exposure.include=*
#management.endpoints.jmx.exposure.exclude=*
management.endpoint
## 配置jolokia
management.endpoint.jolokia.enabled=true
management.endpoint.jolokia.config.debug=false
# ------------ jmx配置 end ------------ #



# ------------  logging configuration start ------------ #
## 控制台日志彩色输出
spring.output.ansi.enabled=detect
# log4j2配置文件
logging.config=classpath:log4j2-spring.xml
# ------------  logging configuration end ------------ #


# ------------  spring aop configuration start ------------ #
## 配置CGLib代理，false表示JDK代理（默认）
spring.aop.proxy-target-class=true
# ------------  spring aop configuration end ------------ #


# ------------  swagger配置 start ------------ #
swagger.enabled = true

swagger.title=springboot-webapp-apidoc
swagger.description=Webapp api doc
swagger.version=1.0.0
swagger.license=Apache License, Version 2.0
swagger.licenseUrl=https://www.apache.org/licenses/LICENSE-2.0.html
swagger.termsOfServiceUrl=https://github.com/paranoidq/archetype-springboot
swagger.contact.name=paranoidq
swagger.contact.url=http://paranoidq.github.io
swagger.contact.email=paraoid_qian@163.com

swagger.base-package=me.webapp.web.open
swagger.base-path=/**
swagger.exclude-path=/management/**, /error
# ------------  swagger配置 end ------------ #


# ------------  mybatis配置 start ------------ #
mybatis.config-location=classpath:config/${spring.profiles.active}/mybatis-config.xml
mybatis.mapper-locations=classpath:mappers/**.xml
# ------------  mybatis配置 end ------------ #